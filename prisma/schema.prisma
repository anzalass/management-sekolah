// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Sekolah {
  id    String @id @default(uuid())
  nama  String
  npsn String
  kas   Int?
  desa String
  kecamatan String
  kabupaten String
  provinsi String
  telephone String
  email String
  website String
  namaKepsek String
  logo String?
  logoId String?
  tahunAjaran String
}

model Guru {
  id            String @id @default(uuid())
  nip            String @unique
  nik            String
  password       String
  jabatan        String
  nama           String
  tempatLahir    String
  tanggalLahir   DateTime?
  alamat         String 
  agama          String
  jenisKelamin   String
  noTelepon      String
  email          String @unique
  status         String
  foto           String?
  fotoId         String?  
  RiwayatPendidikanGuru RiwayatPendidikanGuru[]
  Kelas          Kelas[]
  KehadiranGuru  KehadiranGuru[]
  KelasDanMapel  KelasDanMapel[]
  Logs           Logs[]
  MataPelajaran Mata_Pelajaran[]
  testimoni     Testimoni[]
  news          News[]
  gallery       Gallery[]
  guruTemplate  GuruTemplate[]
  jadwalMengajar jadwalMengajar[]
  PerizinanGuru PerizinanGuru[]

}

model jadwalMengajar {
    id            String @id @default(uuid())
    kelas String
    nipGuru String
    jamMulai String
    jamSelesai String
    namaMapel String
    hari String
    ruang String
    Guru              Guru               @relation(fields: [nipGuru], references: [nip])


}

model KehadiranGuru {
  id            String   @id @default(uuid())
  nipGuru       String
  tanggal       DateTime @default(now())
  jamMasuk      DateTime?
  jamPulang     DateTime?
  fotoMasuk     String?
  lokasiMasuk   String?   // simpan JSON string: {"lat": -6.2, "long": 106.8}
  lokasiPulang  String?
  status String?
  Guru          Guru      @relation(fields: [nipGuru], references: [nip])
}

model Kelas {
  id                String             @id @default(uuid())
  nipGuru               String             
  nama              String
  ruangKelas        String
  tahunAjaran       String
  Guru              Guru               @relation(fields: [nipGuru], references: [nip])
  DaftarSiswaKelas  DaftarSiswaKelas[] 
}
model RiwayatPendidikanGuru {
  id             String @id @default(uuid())
  nip            String
  nama           String
  gelar          String
  jenjangPendidikan String
  tahunLulus     String
  Guru           Guru  @relation(fields: [nip], references: [nip])
}


model KelasDanMapel {
  id             String          @id @default(uuid())
  nipGuru            String
  namaMapel      String
  ruangKelas     String
  kelas          String
  tahunAjaran    String
  Guru           Guru            @relation(fields: [nipGuru], references: [nip])
  DaftarSiswa DaftarSiswa[]
  NilaiSiswa     NilaiSiswa[]
  KehadiranSiswa KehadiranSiswa[]
  JenisNilai JenisNilai[]
}

model DaftarSiswa {
  id        String @id @default(uuid())
  idKelas   String
  nis       String
  KelasDanMapel KelasDanMapel @relation(fields: [idKelas], references: [id])
  Siswa     Siswa @relation(fields: [nis], references: [nis])
}

model DaftarSiswaKelas {
  id          String @id @default(uuid())
  idKelas     String
  nis         String
  Kelas       Kelas @relation(fields: [idKelas], references: [id])
  Siswa       Siswa @relation(fields: [nis], references: [nis])
}

model JenisNilai {
    id             String          @id @default(uuid())
    idKelasMapel   String
    jenis          String
    bobot          Int
    KelasDanMapel  KelasDanMapel @relation(fields: [id], references: [id])
}

model NilaiSiswa {
  id              String @id @default(uuid())
  nis             String
  idKelasDanMapel String
  jenisNilai      String
  nilai           Int
  Siswa           Siswa @relation(fields: [nis], references: [nis])
  KelasDanMapel   KelasDanMapel @relation(fields: [idKelasDanMapel], references: [id])
}

model KehadiranSiswa {
  id             String @id @default(uuid())
  nis            String
  idKelasDanMapel String
  waktu          DateTime
  keterangan     String
  Siswa          Siswa @relation(fields: [nis], references: [nis])
  KelasDanMapel  KelasDanMapel @relation(fields: [idKelasDanMapel], references: [id])
}

model Siswa {
  id            String @id @default(uuid())
  nis           String @unique 
  nik           String
  nama          String
  jurusan       String?
  tanggalLahir  DateTime
  tempatLahir   String
  namaAyah      String
  namaIbu       String
  tahunLulus    String
  poin          Int?
  alamat        String?
  agama         String
  kelas         String?
  jenisKelamin  String
  foto          String?
  fotoId        String?  
  noTelepon     String? @unique
  noTeleponOrtu String  @unique
  email         String? @unique
  ekstraKulikulerPeminatan String?
  ekstraKulikulerWajib String?
  DaftarSiswa   DaftarSiswa[]
  DaftarSiswaKelas DaftarSiswaKelas[]
  NilaiSiswa    NilaiSiswa[]
  KehadiranSiswa KehadiranSiswa[]
  PelanggaranSiswa Pelanggaran_Dan_Prestasi_Siswa[]
  Peminjaman_dan_Pengembalian Peminjaman_dan_Pengembalian[]
  Tagihan Tagihan[]
  RiwayatPembayaran RiwayatPembayaran[]
  PerizinanSiswa PerizinanSiswa[]
}

model Pelanggaran_Dan_Prestasi_Siswa {
  id             String @id @default(uuid())
  nis            String
  waktu          DateTime
  poin           Int
  jenis          String
  keterangan     String
  Siswa          Siswa @relation(fields: [nis], references: [nis])
}

model Ruangan {
  id    String @id @default(uuid())
  nama  String
  keterangan String?
}

model Jenis_Inventaris {
  id           String @id @default(uuid())
  nama         String
}

model Inventaris {
  id           String @id @default(uuid())
  nama         String
  quantity     Int
  ruang       String
  hargaBeli    Int
  waktuPengadaan DateTime
  keterangan   String
  Pemeliharaan_Inventaris Pemeliharaan_Inventaris[]
}

model Pemeliharaan_Inventaris {
  id              String     @id @default(uuid())
  idinventaris    String
  nama            String
  status          String
  quantity        Int
  ruang String
  biaya           Int
  tanggal         DateTime
  keterangan      String
  Inventaris      Inventaris @relation(fields: [idinventaris], references: [id])
}


model RiwayatAnggaran {
  id         String @id @default(uuid())
  nama       String
  tanggal    DateTime
  jumlah     Int
  jenis      String
  keterangan String
}

model KegiatanSekolah {
  id         String @id @default(uuid())
  nama       String
  tahunAjaran String
  keterangan String
  waktuMulai       DateTime
  waktuSelesai     DateTime
  status     String
}

enum StatusIzin {
  menunggu
  disetujui
  ditolak
}

model PerizinanGuru {
  id         String   @id @default(uuid())
  nipGuru        String
  keterangan String
  time       DateTime
  bukti      String
  bukti_id   String
  status     StatusIzin
  Guru      Guru @relation(fields: [nipGuru], references: [nip])

}

model PerizinanSiswa {
  id         String @id @default(uuid())
  nis        String
  jenis      String
  keterangan String
  time       DateTime
  bukti      String
  bukti_id String
  status     StatusIzin
  Siswa       Siswa  @relation(fields: [nis], references: [nis])
}

model Logs {
  id         String @id @default(uuid())
  nip        String
  keterangan String
  time       DateTime
  Guru       Guru  @relation(fields: [nip], references: [nip])
}

model EkstraKulikuler {
  id         String @id @default(uuid())
  nama       String
  waktu      DateTime
  jenis      String
}

model Buku_Perpustakaan {
  id         String @id @default(uuid())
  nama       String
  pengarang   String
  penerbit   String
  tahunTerbit Int
  keterangan String
  stok Int
  Peminjaman_dan_Pengembalian Peminjaman_dan_Pengembalian[]
}

model Pengumuman {
  id         String @id @default(uuid())
  title       String
  time DateTime
  content     String
}

model Peminjaman_dan_Pengembalian {
  id         String @id @default(uuid())
  nis        String
  idBuku     String
  waktuPinjam DateTime
  waktuKembali DateTime
  status      String
  keterangan  String
  Buku_Perpustakaan Buku_Perpustakaan @relation(fields: [idBuku], references: [id])
  Siswa Siswa @relation(fields: [nis], references: [nis])
}

model Mata_Pelajaran {
  id      String @id @default(uuid())
  nama    String
  kelas   String
  guruId  String
  Guru    Guru   @relation(fields: [guruId], references: [id])
}


model Periode_Tahun_Ajaran {
  id          String @id @default(uuid())
  tahunAjaran String
}


model Tagihan {
  id          String @id @default(uuid())
  nama        String
  nis         String
  waktu       DateTime
  jatuhTempo  DateTime
  status      String
  keterangan  String
  nominal     Int
  Siswa Siswa @relation(fields: [nis], references: [nis])
}

model RiwayatPembayaran {
  id          String @id @default(uuid())
  nis         String
  idTagihan   String
  waktuBayar  DateTime
  Siswa Siswa @relation(fields: [nis], references: [nis])
}


model Testimoni {
  id          String   @id @default(uuid())
  image       String
  description String
  guruId      String?
  guru        Guru?    @relation(fields: [guruId], references: [id])
}

model News {
  id          String   @id @default(uuid())
  title       String
  content     String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  guruId      String?
  guru        Guru?    @relation(fields: [guruId], references: [id])
}

model Gallery {
  id          String   @id @default(uuid())
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  guruId      String?
  guru        Guru?    @relation(fields: [guruId], references: [id])
}

model GuruTemplate {
  id        String   @id @default(uuid())
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  guruId    String?
  guru      Guru?    @relation(fields: [guruId], references: [id])
}




model PendaftaranSiswa{
    id          String @id @default(uuid())
    studentName     String
    parentName  String
    yourLocation String
    phoneNumber  String
    email        String
}
